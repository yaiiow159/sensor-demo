version: '3.7'

services:

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "zk-shell", "127.0.0.1:2181", "ruok" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:6.2.1
    container_name: redis
    restart: on-failure
    volumes:
      - redis_conf:/etc/redis/redis.conf
    deploy:
      replicas: 1
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: 'sensor_data-topic:1:1'
    ports:
      - "9092:9092"
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9093", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    depends_on:
      - kafka
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"

volumes:
  redis_conf:

networks:
  sensor_network:
    driver: bridge